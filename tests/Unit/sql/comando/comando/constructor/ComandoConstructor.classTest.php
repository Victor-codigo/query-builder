<?php

namespace GT\Libs\Sistema\BD\QueryConstructor\Sql\Comando\Comando\Constructor;

use GT\Libs\Sistema\BD\QueryConstructor\Sql\Comando\Comando\ComandoDmlMock;
use GT\Libs\Sistema\BD\QueryConstructor\Sql\Comando\Comando\Constructor\ComandoConstructor;
use PHPUnit_Framework_TestCase;
use Phpunit_Util;
//******************************************************************************




/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-03-26 at 14:51:55.
 */
class ComandoConstructorTest extends PHPUnit_Framework_TestCase
{
    use Phpunit_Util;
//******************************************************************************

    /**
     * @var ComandoConstructor
     */
    protected $object;

    /**
     *
     * @var ComandoDmlMock
     */
    private $comando_mock = null;

    /**
     * @var ComandoDmlMock
     */
    private $mock = null;





    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->mock = new ComandoDmlMock();

        $conexion = $this->mock->getConexionMock();
        $clausula_mock = $this->mock->getClausulasFabrica();
        $fabrica_condiciones = $this->mock->getCondicionesFabricaMock();

        $this->object = $this->getMockBuilder(ComandoConstructor::class)
                                ->setConstructorArgs(array($conexion, $clausula_mock, $fabrica_condiciones))
                                ->setMethods(array())
                                ->getMockForAbstractClass();
    }
//******************************************************************************


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }
//******************************************************************************



// <editor-fold defaultstate="collapsed" desc=" Tests para la funciÃ³n: getComando ">

    /**
     * @covers GT\Libs\Sistema\BD\QueryConstructor\SqlComando\Comando\Constructor\ComandoConstructor::getComando
     * @group getComando
     */
    public function testGetComando()
    {
        $expects = 'comando';

        $this->propertyEdit($this->object, 'comando', $expects);

        $resultado = $this->object->getComando();

        $this->assertEquals($expects, $resultado,
            'ERROR: el valor devuelto no es el esperado');
    }
//******************************************************************************

// </editor-fold>
}